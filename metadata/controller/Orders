{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Orders"
    },
    "designerId": "9e04e7ac-feac-47e5-8caa-89507c0a7c6e",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onAddOrderButtonTap",
                "fn": "onAddOrderButtonTap",
                "implHandler": [
                    "this.getOrders().animateActiveItem(1, {type:'slide',direction:'up'});",
                    "",
                    "var bttn = Ext.getCmp('addOrder');",
                    "",
                    "bttn.setIconCls('arrow_down');",
                    "bttn.setItemId('closeOrder');",
                    "bttn.setId('closeOrder');",
                    "",
                    "bttn.observableId = '#closeOrder';",
                    "",
                    "console.log(this);",
                    "",
                    "this.clearOrder();",
                    "",
                    "this.newOrder();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#addOrder"
            },
            "designerId": "afdf07a1-a772-4eb6-9c26-5b0bdaadfaba"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "newOrders",
                "ref": "orders",
                "selector": "#orders"
            },
            "designerId": "1d8514ad-f456-4f4d-ba55-fd0e03d719c9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onCloseOrderButtonTap",
                "fn": "onCloseOrderButtonTap",
                "implHandler": [
                    "this.getOrders().animateActiveItem(0, {type:'slide',direction:'down'});",
                    "",
                    "var bttn = Ext.getCmp('addOrder');",
                    "",
                    "bttn.setIconCls('add');",
                    "bttn.setItemId('addOrder');",
                    "bttn.setId('addOrder');",
                    "",
                    "bttn.observableId = '#addOrder';",
                    "",
                    "this.clearOrder();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#closeOrder"
            },
            "designerId": "0982f043-00e8-4776-b4aa-c4f1d6c4fb2f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onEnterButtonTap",
                "fn": "onEnterButtonTap",
                "implHandler": [
                    "Ext.Viewport.setMasked({",
                    "    xtype: 'loadmask',",
                    "    message: 'Calculating...'",
                    "});",
                    "",
                    "new Ext.util.DelayedTask(function () {",
                    "    Ext.Viewport.setMasked(false);    ",
                    "}).delay(450);",
                    "",
                    "",
                    "var form = this.getWindowForm();",
                    "var values = form.getValues();",
                    "",
                    "",
                    "var calc = MyApp.app.getController('Calc').calc(values.Type, values.Shade, values.Panes,values.Width,values.Height);",
                    "",
                    "var windowModel = Ext.create('MyApp.model.Window',{",
                    "    Panes: values.Panes,",
                    "    Width: values.Width,",
                    "    Height: values.Height,",
                    "    Manufacturer: values.Manufacturer,",
                    "    Type: values.Type,",
                    "    Shade: values.Shade,",
                    "    Location: values.Location,",
                    "    Direction: values.Direction,",
                    "    RollSize: calc[0],",
                    "    LinearFeet: calc[1],",
                    "    Cut: calc[5]",
                    "",
                    "});",
                    "",
                    "",
                    "var tempStore = Ext.getStore('temp').add(windowModel);",
                    "",
                    "",
                    "/*",
                    "//reset form",
                    "var z = form.getInnerItems();",
                    "",
                    "Ext.each(z[0].getInnerItems(), function(item){",
                    "    var a = item.getInnerItems();",
                    "    Ext.each(a, function(item){",
                    "        item.reset();",
                    "    });",
                    "});",
                    "",
                    "",
                    "//reset window set details",
                    "",
                    "Ext.each(z[1].getInnerItems(), function(item){",
                    "",
                    "    if(item.id != \"FilmSelect\"){",
                    "        //console.log(item.id);",
                    "        item.reset();",
                    "    }else{",
                    "        item.setPlaceHolder('');",
                    "    }",
                    "});",
                    "",
                    "*/"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#enterOrder"
            },
            "designerId": "9d8843b0-d058-4fb0-8abe-a1202246a1d2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "enterOrder",
                "forceCreate": true,
                "ref": "enterOrder",
                "selector": "#enterOrder"
            },
            "designerId": "a6d2ebb2-0b29-4b66-a499-c81e20e5bffe"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "TabPanel",
                "ref": "TabPanel",
                "selector": "#newOrder"
            },
            "designerId": "0114952b-5376-415c-a9f2-d96494345534"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "windowForm",
                "ref": "windowForm",
                "selector": "#AddWindowPanel"
            },
            "designerId": "4e796fd3-ce94-4791-a922-bbb5612d197c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onActionDeleteButtonTap",
                "fn": "onActionDeleteButtonTap",
                "implHandler": [
                    "Ext.Msg.confirm(  ",
                    "\"Confirm\", ",
                    "\"Do you wish to delete Order \" + this.getCustomerForm().getRecord().getData().Number + \" ?\", ",
                    "function(button){",
                    "    if (button == 'yes') {",
                    "        this.deleteOrder();",
                    "    } else {",
                    "        return false;",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#ActionDelete"
            },
            "designerId": "a22a7f29-654c-41ca-b5fe-ce50043fc27d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onActionEmailButtonTap",
                "fn": "onActionEmailButtonTap",
                "implHandler": [
                    "console.log('email tap');",
                    "",
                    "var tempStore = Ext.getStore('temp');",
                    "",
                    "var records = tempStore.getData().items;",
                    "",
                    "var tbl = '<table width=\"316\" border=\"1\">'+",
                    "'<tr>'+",
                    "'<th width=\"99\" scope=\"col\">header</th>'+",
                    "'<th width=\"9\" scope=\"col\">1</th>'+",
                    "'<th width=\"9\" scope=\"col\">2</th>'+",
                    "'<th width=\"9\" scope=\"col\">3</th>'+",
                    "'<th width=\"9\" scope=\"col\">4</th>'+",
                    "'<th width=\"9\" scope=\"col\">5</th>'+",
                    "'<th width=\"9\" scope=\"col\">6</th>'+",
                    "'</tr>'+",
                    "'<tr>'+",
                    "'<td>1</td>'+",
                    "'<td>2</td>'+",
                    "'<td>3</td>'+",
                    "'<td>4</td>'+",
                    "'<td>5</td>'+",
                    "'<td>6</td>'+",
                    "'<td>7</td>'+",
                    "'</tr>'+",
                    "'</table>'+",
                    "'</body>'+",
                    "'</html>';",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "window.open('mailto:joesinla@gmail.com?Subject=OnlineQuote&body=' + tbl);"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#ActionEmail"
            },
            "designerId": "0c98cf3e-cea4-439e-b116-e5e353677ed3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "ActionPanel",
                "autoCreate": true,
                "ref": "ActionPanel",
                "selector": "#ActionPanel",
                "xtype": "orderaction"
            },
            "designerId": "aba71739-0439-4165-9a85-fa73319db381"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onTextfieldTap",
                "fn": "onTextfieldTap",
                "designer|params": [
                    "textfield"
                ],
                "implHandler": [
                    "var fPicker = this.getFilmPicker();",
                    "",
                    "/*",
                    "var store = Ext.getStore('Rolls');",
                    "",
                    "var typesData = [];",
                    "store.each(function(roll){",
                    "typesData.push(roll.get('Manufacturer'));",
                    "});",
                    "",
                    "var uniqueArray = typesData.filter(function(elem, pos) {",
                    "return typesData.indexOf(elem) == pos;",
                    "});",
                    "",
                    "var tData = [{text:\"\",value:\"\"}];",
                    "",
                    "Ext.each(uniqueArray,function(elem){",
                    "tData.push({\"text\":elem,\"value\":elem});",
                    "});",
                    "",
                    "console.log(fPicker);",
                    "",
                    "this.getMnfSlot().setData(tData);",
                    "*/",
                    "",
                    "Ext.Viewport.add(fPicker);",
                    "fPicker.show();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.field.Text",
                "designer|controlQuery": "textfield"
            },
            "designerId": "7da9006f-b464-410d-b52f-eda4791d3e75"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "MnfSlot",
                "ref": "MnfSlot",
                "selector": "#MnfSlot"
            },
            "designerId": "82f6e747-f48f-49a7-956d-ebf9148c2606"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "TypeSlot",
                "ref": "TypeSlot",
                "selector": "#TypeSlot"
            },
            "designerId": "f2064e17-0701-4441-9ba8-cfffd767ae07"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "ShadeSlot",
                "ref": "ShadeSlot",
                "selector": "#ShadeSlot"
            },
            "designerId": "566841fa-d6e3-43e5-b3b9-40d506c28556"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "FilmPicker",
                "autoCreate": true,
                "ref": "FilmPicker",
                "selector": "#FilmPicker",
                "xtype": "filmpicker"
            },
            "designerId": "622cc99b-c656-49f6-9bc4-475ad5c134fc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onMnfPickerslotSlotpick",
                "fn": "onMnfPickerslotSlotpick",
                "implHandler": [
                    "/*",
                    "var mnfSlot = this.getMnfSlot(),",
                    "    picker = this.getFilmPicker();",
                    "",
                    "var mnfValue = mnfSlot.getSelection()[0].getData().value;",
                    "",
                    "var store = Ext.getStore('Rolls');",
                    "store.clearFilter();",
                    "",
                    "//store.load();",
                    "store.filter('Manufacturer', mnfValue);",
                    "",
                    "var types = [];",
                    "Ext.each(store.getData().items, function(obj){",
                    "    types.push(obj.getData().Type);",
                    "});",
                    "",
                    "var uniqueArray = types.filter(function(elem, pos) {",
                    "    return types.indexOf(elem) == pos;",
                    "});",
                    "",
                    "var tData = [{text:\"\",value:\"\"}];",
                    "Ext.each(uniqueArray,function(elem){",
                    "    tData.push({\"text\":elem,\"value\":elem});",
                    "});",
                    "",
                    "picker.slots({",
                    "    xtype: 'pickerslot',",
                    "    id: 'TypeSlot',",
                    "    itemId: 'mypickerslot',",
                    "    scrollToTopOnRefresh: false,",
                    "    name: 'typeSlot',",
                    "    title: 'typeSlot',",
                    "    data: tData",
                    "});",
                    "",
                    "*/"
                ],
                "name": "slotpick",
                "designer|targetType": "Ext.picker.Slot",
                "designer|controlQuery": "#MnfSlot"
            },
            "designerId": "78ce9ae4-d66e-47ac-b9df-8055afa94e46"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onTypePickerslotSlotpick",
                "fn": "onTypePickerslotSlotpick",
                "implHandler": [
                    "/*",
                    "var typeSlot = this.getTypeSlot();",
                    "",
                    "var typeValue = typeSlot.getSelection()[0].getData().value;",
                    "",
                    "var store = Ext.getStore('Rolls');",
                    "store.filter('Type', typeValue);",
                    "",
                    "var shades = [];",
                    "Ext.each(store.getData().items, function(obj){",
                    "    shades.push(obj.getData().Shade);",
                    "});",
                    "",
                    "var uniqueArray = shades.filter(function(elem, pos) {",
                    "    return shades.indexOf(elem) == pos;",
                    "});",
                    "",
                    "var tData = [{text:\"\",value:\"\"}];",
                    "Ext.each(uniqueArray,function(elem){",
                    "    tData.push({\"text\":elem,\"value\":elem});",
                    "});",
                    "",
                    "this.getShadeSlot().setData(tData);",
                    "",
                    "*/"
                ],
                "name": "slotpick",
                "designer|targetType": "Ext.picker.Slot",
                "designer|controlQuery": "#TypeSlot"
            },
            "designerId": "484b287b-9dba-4742-9b11-48017210d5c6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onFilmPickerHide",
                "fn": "onFilmPickerHide",
                "implHandler": [
                    "/*",
                    "this.getTypeSlot().setData([\"\"]);",
                    "this.getShadeSlot().setData([\"\"]);",
                    "",
                    "var form = this.getWindowForm();",
                    "",
                    "var mnfValue = this.getMnfSlot().getSelection()[0].getData().value;",
                    "var typeValue = this.getTypeSlot().getSelection()[0].getData().value;",
                    "var shadeValue = this.getShadeSlot().getSelection()[0].getData().value;",
                    "",
                    "this.getTypeSlot().deselectAll();",
                    "this.getShadeSlot().deselectAll();",
                    "",
                    "if(mnfValue && typeValue && shadeValue){",
                    "    form.setValues({Manufacturer : mnfValue});",
                    "    form.setValues({Type : typeValue});",
                    "    form.setValues({Shade : shadeValue});",
                    "",
                    "    Ext.getCmp('FilmSelect').setPlaceHolder(typeValue + \"  %\" + shadeValue);",
                    "",
                    "    //??",
                    "    Ext.getStore(\"Rolls\").clearFilter();",
                    "",
                    "}",
                    "",
                    "*/"
                ],
                "name": "hide",
                "designer|targetType": "Ext.picker.Picker",
                "designer|controlQuery": "#FilmPicker"
            },
            "designerId": "6c02369d-0be1-43bb-b8da-81337f22970c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "CustomerForm",
                "ref": "CustomerForm",
                "selector": "#CustomerPanel"
            },
            "designerId": "677c32d3-27cc-4f72-8bea-69d3af2ace30"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "WindowList",
                "ref": "WindowList",
                "selector": "#WindowList"
            },
            "designerId": "c53b26ff-7628-4374-9c86-3831e6eb48de"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "OrderList",
                "ref": "OrderList",
                "selector": "#OrderList"
            },
            "designerId": "08c62387-0e24-4c18-96ae-834467311271"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "saveOrder",
                "fn": "saveOrder",
                "designer|params": [
                    "order"
                ],
                "implHandler": [
                    "/*",
                    "* Save Order and Windows",
                    "*",
                    "*/ ",
                    "",
                    "",
                    "var orderStore = Ext.getStore('Orders');",
                    "var windowStore = Ext.getStore('Windows');",
                    "var tempStore = Ext.getStore('temp');",
                    "",
                    "console.log('temp store', tempStore);",
                    "",
                    "var orderModel = this.getCustomerForm().getRecord();",
                    "",
                    "orderModel.set(this.getCustomerForm().getValues());",
                    "",
                    "",
                    "if(orderModel.phantom === false){",
                    "    orderModel.set({Updated: Date.now()});",
                    "}",
                    "",
                    "orderStore.add(orderModel);",
                    "",
                    "tempStore.each(function(r){",
                    "    r.set('orderNumber', orderModel.get('Number'));",
                    "    windowStore.add(r);",
                    "    console.log('inloop');",
                    "});",
                    "",
                    "console.log('outloop');",
                    "windowStore.sync();",
                    "orderStore.sync();",
                    "",
                    "//this.getCustomerForm().setRecord(orderModel);",
                    "",
                    "//MyApp.app.getController('Inventory').reserveFilm(order);",
                    "",
                    "return;"
                ]
            },
            "designerId": "c5c27408-e32c-4f8d-b5d3-17e5a333842f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onActionButtonTap",
                "fn": "onActionButtonTap",
                "implHandler": [
                    "var actionSheet = this.getActionPanel();",
                    "Ext.Viewport.add(actionSheet);",
                    "actionSheet.show();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#actionBttn"
            },
            "designerId": "ed88d957-5def-4986-9acd-89d92b04a9c4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onActionSaveButtonTap",
                "fn": "onActionSaveButtonTap",
                "implHandler": [
                    "this.saveOrder();",
                    "",
                    "this.getActionPanel().hide();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#ActionSave"
            },
            "designerId": "74014033-7b58-42fa-837e-b87c70a61ccd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onOrderListSelect",
                "fn": "onOrderListSelect",
                "implHandler": [
                    "//animate panel",
                    "this.getOrders().animateActiveItem(1, {type:'slide',direction:'up'});",
                    "",
                    "var bttn = Ext.getCmp('addOrder');",
                    "",
                    "bttn.setIconCls('arrow_down');",
                    "bttn.setItemId('closeOrder');",
                    "bttn.setId('closeOrder');",
                    "",
                    "bttn.observableId = '#closeOrder';",
                    "",
                    "",
                    "this.loadOrder(record);",
                    "",
                    "this.getOrderList().deselectAll();"
                ],
                "name": "select",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "#OrderList"
            },
            "designerId": "04ed4f6e-dc14-426a-a0d2-8fc6eb477aa3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onWindowListDisclose",
                "fn": "onWindowListDisclose",
                "implHandler": [
                    "Ext.Msg.confirm(",
                    "\"Confirm\", ",
                    "\"Do you wish to delete window?\", ",
                    "function(button){",
                    "    if (button == 'yes') {",
                    "        Ext.getStore('temp').remove(record);",
                    "",
                    "",
                    "    } else {",
                    "        return false;",
                    "    }",
                    "});"
                ],
                "name": "disclose",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "#WindowList"
            },
            "designerId": "669f9bb5-7379-4f5b-85ca-11ae58f62097"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "deleteOrder",
                "fn": "deleteOrder",
                "designer|params": [
                    "record"
                ],
                "implHandler": [
                    "//get stores..",
                    "var windowStore = Ext.getStore('Windows');",
                    "var orderStore = Ext.getStore('Orders');",
                    "var tempstore = Ext.getStore('temp');",
                    "",
                    "",
                    "//delete record ",
                    "orderStore.remove(record);",
                    "orderStore.sync();",
                    "",
                    "//load window store",
                    "windowStore.each(function(r){",
                    "    if(r.get('orderNumber') === record.get('Number')){",
                    "        windowStore.remove(r);",
                    "    }",
                    "});",
                    "",
                    "windowStore.sync();",
                    "",
                    "",
                    "",
                    "//reset all order forms",
                    "this.getCustomerForm().reset();",
                    "",
                    "var x = this.getWindowForm().getInnerItems();",
                    "",
                    "Ext.each(x[0].getInnerItems(), function(item){",
                    "    var a = item.getInnerItems();",
                    "    Ext.each(a, function(item){",
                    "        item.reset();",
                    "    });",
                    "});",
                    "",
                    "//reset window set details",
                    "Ext.each(x[1].getInnerItems(), function(item){",
                    "",
                    "    if(item.id != \"FilmSelect\"){",
                    "        item.reset();",
                    "    }else{",
                    "        item.setPlaceHolder('');",
                    "    }",
                    "});",
                    "",
                    "",
                    "this.getActionPanel().hide();"
                ]
            },
            "designerId": "bf649abf-f404-46f3-9491-534e951100d6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onOrderListDisclose",
                "fn": "onOrderListDisclose",
                "implHandler": [
                    "var that = this;",
                    "",
                    "Ext.Msg.confirm(",
                    "\"Confirm\", ",
                    "\"Do you wish to delete Order \" + record.getData().Number + \" ?\", ",
                    "function(button){",
                    "    if (button == 'yes') {",
                    "        that.deleteOrder(record);",
                    "    } else {",
                    "        return false;",
                    "    }",
                    "});",
                    ""
                ],
                "name": "disclose",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "#OrderList"
            },
            "designerId": "904a4c26-f1d5-4b53-9b46-2aa812fbc194"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onActiveButtonTap",
                "fn": "onActiveButtonTap",
                "implHandler": [
                    "console.log('active');"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#ActiveBttn"
            },
            "designerId": "bb55bdb5-6c05-4f9f-a889-12bcaf230225"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "newOrder",
                "fn": "newOrder",
                "implHandler": [
                    "",
                    "//new order #",
                    "var orderNumber = Math.floor(Math.random()*90000) + 10000;",
                    "",
                    "var orderModel = Ext.create('MyApp.model.Order', {",
                    "    Number: orderNumber,",
                    "    Created: Date.now(),",
                    "    Status: \"Active\" ",
                    "});",
                    "",
                    "",
                    "//create temp store for windows",
                    "",
                    "this.getCustomerForm().setRecord(orderModel);"
                ]
            },
            "designerId": "97ed2d27-da3a-4873-aa05-e4cc07f31594"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onSegmentedbuttonToggle",
                "fn": "onSegmentedbuttonToggle",
                "implHandler": [
                    "this.getCustomerForm().getRecord().set('Status', button.getText());",
                    "",
                    "console.log('event');"
                ],
                "name": "toggle",
                "designer|targetType": "Ext.SegmentedButton",
                "designer|controlQuery": "#StatusButtons"
            },
            "designerId": "2c898e53-b786-4d73-b066-84f45f3799cc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "clearOrder",
                "fn": "clearOrder",
                "implHandler": [
                    "console.log('clear order');",
                    "",
                    "Ext.getStore('temp').removeAll();",
                    "",
                    "Ext.getStore('Windows').clearFilter();",
                    "",
                    "this.getCustomerForm().setRecord(null);",
                    "",
                    "this.getCustomerForm().reset();",
                    "",
                    ""
                ]
            },
            "designerId": "1d44a11f-18d9-4c6c-b92b-5640cfb50a9b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "loadOrder",
                "fn": "loadOrder",
                "designer|params": [
                    "record"
                ],
                "implHandler": [
                    "",
                    "",
                    "var orderStore = Ext.getStore('Orders');",
                    "var windowStore = Ext.getStore('Windows');",
                    "var tempStore = Ext.getStore('temp');",
                    "",
                    "var orderModel = orderStore.getById(record.getData().id);",
                    "",
                    "//load ordermodel into form",
                    "this.getCustomerForm().setRecord(orderModel);",
                    "",
                    "//load window store",
                    "windowStore.clearFilter();",
                    "windowStore.filter('orderNumber', record.getData().Number);",
                    "windowStore.load();",
                    "",
                    "",
                    "",
                    "//var windows = orderModel.windows();",
                    "//fill temp store with windows",
                    "tempStore.removeAll();",
                    "",
                    "windowStore.each(function(r){",
                    "    tempStore.add(r);",
                    "});",
                    "",
                    "console.log('load temp store', tempStore);",
                    "",
                    "windowStore.clearFilter();"
                ]
            },
            "designerId": "af7738f5-8a59-499e-9106-66c832a41419"
        }
    ]
}